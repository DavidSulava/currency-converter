{"version":3,"sources":["store/actions/getListCurrency.js","components/CurrencyComponent.js","components/SearchForm.js","views/CurrencyList.js","components/navBar.js","views/converter.js","App.js","store/reducers/rootReducer.js","index.js"],"names":["getListAction","dispatch","getState","a","headers","method","fetch","response","json","data","Valute","console","log","CurrencyComponent","currency","delta","Value","Previous","toPrecision","arrowUp","Col","xs","sm","arrowDown","Container","className","Row","Name","Nominal","CharCode","style","SearchForm","searchData","onSubmit","type","placeholder","Button","variant","size","CurrencyList","currencyData","useDispatch","valute","useSelector","state","shallowEqual","useState","setCurrency","useEffect","e","preventDefault","searchValue","target","value","filteredData","Object","keys","filter","index","cName","charCode","cReg","RegExp","test","map","length","key","obgEl","ID","Spinner","animation","NavBar","pathToCurrency","Nav","Item","to","isActive","match","location","pathname","Converter","options","setOptions","label","input","select","dataF1","setDataF1","dataF2","setDataF2","selValueF1","convert","resetFormState","ev","setStateF","selected","prev","inputData","isNaN","result","toFixed","elOptionList","el","onChange","onClick","memorize_1","disabled","App","exact","path","component","initState","rootReducer","action","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2337dbac.chunk.js","sourcesContent":["export const getListAction = ()=> {\r\n\r\n    return async ( dispatch , getState )=>{\r\n\r\n        const API = 'https://www.cbr-xml-daily.ru/daily_json.js';\r\n\r\n        const headers = {\r\n            method : 'GET',\r\n        };\r\n\r\n        try {\r\n            const response  = await fetch( API, headers );\r\n            let data        = await response.json();\r\n\r\n            if( !data.Valute )\r\n                dispatch({ 'type': 'SET_VALUTE', 'valute': {} });\r\n\r\n            dispatch({ 'type': 'SET_VALUTE', 'valute': data.Valute });\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n\r\n}","import React from 'react'\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row       from 'react-bootstrap/Row';\r\nimport Col       from 'react-bootstrap/Col';\r\n\r\nexport default function CurrencyComponent({currency}) {\r\n\r\n    const mainCurrency = 'RUB';\r\n\r\n    let delta = currency.Value - currency.Previous;\r\n        delta = delta.toPrecision(4);\r\n\r\n    const arrowUp    = <Col xs={1} sm={1}>&#x2191;</Col>;\r\n    const arrowDown  = <Col xs={1} sm={1}>&#x2193;</Col>;\r\n\r\n\r\n    return (\r\n        <Container  className='currency_element'>\r\n\r\n            <Row xs={true} sm={true}>{currency.Name}</Row>\r\n\r\n            <Row xs='auto' sm='auto' className='currency_data_wrapper'>\r\n\r\n                <Col xs={7} sm={7}>\r\n                    <Row>\r\n                        <Col xs='auto' sm='auto' className='p-0'>\r\n                            {currency.Nominal + ` ` + currency.CharCode}\r\n                        </Col>\r\n\r\n                        <Col xs={2} sm={2} className='text-center p-0'>&#x2194;</Col>\r\n\r\n                        <Col xs='auto' sm='auto' className='p-0'>\r\n                            {currency.Value + ' ' + mainCurrency}\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n\r\n\r\n                <Col xs={4} sm={4} className=\"ml-sm-4\">\r\n                    <Row className=\"delta_wrapper\" style={{ 'color': delta>0? 'green': 'red' }}>\r\n                        { delta>0? arrowUp: arrowDown}\r\n                        <Col className='ml-sm-2'>{ delta }</Col>\r\n                    </Row>\r\n                </Col>\r\n\r\n            </Row>\r\n\r\n        </Container>\r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nfunction SearchForm({searchData}) {\r\n\r\n    return (\r\n        <form className='searchForm' onSubmit={searchData}>\r\n            <input type=\"text\" placeholder='Type to search...'/>\r\n            <Button type='submit' variant=\"primary\" size=\"sm\">Search</Button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default SearchForm\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector, shallowEqual  } from 'react-redux';\r\n\r\nimport Spinner  from 'react-bootstrap/Spinner';\r\n\r\nimport {getListAction} from '../store/actions/getListCurrency';\r\nimport CurrencyComponent from '../components/CurrencyComponent';\r\nimport SearchForm from '../components/SearchForm'\r\n\r\nfunction CurrencyList() {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const valute = useSelector(state => state.valute, shallowEqual );\r\n\r\n  const [currency, setCurrency] = useState(valute);\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch( getListAction() );\r\n  }, [dispatch]);\r\n  useEffect(() => {\r\n    setCurrency(valute)\r\n  }, [valute]);\r\n\r\n  const searchData = (e)=>{\r\n    e.preventDefault();\r\n\r\n    let searchValue  = e.target[0].value;\r\n    let filteredData = {};\r\n\r\n    Object.keys(valute)\r\n      .filter((index)=>{\r\n\r\n        let cName    = valute[index].Name;\r\n        let charCode = valute[index].CharCode;\r\n        let cReg     = new RegExp(`.*${searchValue}.*` , 'i');\r\n\r\n        return cReg.test(cName) || cReg.test(charCode)\r\n      })\r\n      .map((index)=>{\r\n        filteredData[index] = valute[index];\r\n      });\r\n\r\n    if( Object.keys(filteredData).length )\r\n      setCurrency(filteredData);\r\n  }\r\n\r\n\r\n  const createList = (currencyData, CurrencyComponent)=>{\r\n\r\n    return Object.keys(currencyData).map(function(key, index) {\r\n\r\n      let obgEl = currencyData[key];\r\n\r\n      return <CurrencyComponent currency={obgEl} key={obgEl.ID}/>\r\n\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className='currency_list_wrapper '>\r\n      <SearchForm searchData={searchData}/>\r\n      {\r\n        Object.keys(currency).length ?\r\n          createList(currency, CurrencyComponent)\r\n          :\r\n          <Spinner animation=\"border\" className='align-self-center '/>\r\n      }\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default CurrencyList","import React from 'react';\r\nimport { NavLink    } from 'react-router-dom';\r\n\r\nimport Nav from 'react-bootstrap/Nav';\r\n\r\n\r\nfunction NavBar() {\r\n    const currencyText  = 'Currency';\r\n    const converterText = 'Converter';\r\n\r\n    const pathToCurrency  = '/home';\r\n    const pathToConverter = '/converter';\r\n\r\n    const checkActive = (match, location) => {\r\n        if(!location) return false;\r\n        const { pathname } = location;\r\n        return pathname === \"/\" || pathname === pathToCurrency;\r\n    }\r\n\r\n    return (\r\n        <Nav variant=\"pills\">\r\n\r\n            <Nav.Item className='navLink' >\r\n                <NavLink to={pathToCurrency} isActive={checkActive}>{ currencyText }</NavLink >\r\n            </Nav.Item>\r\n\r\n            <Nav.Item className='navLink'>\r\n                <NavLink  to={pathToConverter}>{ converterText }</NavLink >\r\n            </Nav.Item>\r\n\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default NavBar\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch  } from 'react-redux';\r\n\r\nimport {getListAction} from '../store/actions/getListCurrency';\r\n\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row       from 'react-bootstrap/Row';\r\nimport Col       from 'react-bootstrap/Col';\r\n\r\n\r\nfunction Converter() {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const valute = useSelector(state => state.valute );\r\n\r\n    let [options, setOptions] = useState([\"EUR\", \"AUD\", \"GBP\"]);\r\n\r\n    let [dataF1, setDataF1]   = useState({\r\n        label  : '',\r\n        input  : 1,\r\n        select : '',\r\n        value  : ''\r\n    });\r\n    let [dataF2, setDataF2]   = useState({\r\n        label  : '',\r\n        input  : 1,\r\n        select : '',\r\n        value  : ''\r\n    });\r\n\r\n\r\n    //--Make First Call to the API\r\n    useEffect(()=>{\r\n        if( !Object.keys(valute).length )\r\n            dispatch( getListAction() );\r\n    }, [dispatch, valute]);\r\n\r\n    //--Populate Data\r\n    useEffect(()=>{\r\n        if( Object.keys(valute).length ){\r\n\r\n            let keys = Object.keys(valute);\r\n            setOptions(keys);\r\n\r\n            setDataF1({\r\n                label  : valute[keys[0]].Name,\r\n                input  : 1,\r\n                select : keys[0],\r\n                value  : valute[keys[0]].Value\r\n            });\r\n            setDataF2({\r\n                label  : valute[keys[1]].Name,\r\n                input  : 1,\r\n                select : keys[1],\r\n                value  : valute[keys[1]].Value\r\n            })\r\n\r\n        }\r\n    }, [valute]);\r\n\r\n    //--Convert Currency\r\n    useEffect(()=>{\r\n\r\n        let selValueF1 = dataF1.select;\r\n\r\n        if(selValueF1 && valute[selValueF1] )\r\n            convert(dataF1.input);\r\n\r\n    }, [ dataF1.select, dataF2.select, dataF1.input, valute ]);\r\n\r\n\r\n\r\n    const resetFormState= (ev, setStateF)=>{\r\n\r\n        let selected = ev.target.value;\r\n\r\n        if( selected && valute[selected] ){\r\n\r\n            setStateF(prev=>({\r\n                ...prev,\r\n                select : selected,\r\n                label  : valute[selected].Name,\r\n                value  : valute[selected].Value\r\n            }));\r\n        };\r\n    }\r\n\r\n    const convert = ( inputData = 1 )=>{\r\n\r\n        if( !dataF1.value || !dataF2.value || isNaN(inputData) ) return 0;\r\n\r\n        let index = dataF1.value / dataF2.value;\r\n\r\n        let result = inputData*index;\r\n            result = result.toFixed(2);\r\n\r\n        setDataF2( prev =>({...prev, input: result }) );\r\n    }\r\n    const reverseData = ()=>{\r\n        let memorize_1 = dataF1;\r\n        let memorize_2 = dataF2;\r\n\r\n        setDataF1(memorize_2);\r\n        setDataF2(memorize_1);\r\n    }\r\n\r\n    const elOptionList = (options)=>{\r\n        return options.map( el => {\r\n            return <option value={el} key={el}>{el}</option>\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Container className='converter_wrapper'>\r\n            <Row >\r\n\r\n                {/* ---Form №1--- */}\r\n                <Col xs={true} sm={5} >\r\n                    <form className='converter_1' >\r\n                        <label>{ dataF1.label }</label><br/>\r\n                        <select onChange={ ev=>resetFormState(ev, setDataF1) } value={ dataF1.select }  className=\"converter_form_select\">\r\n                            { elOptionList(options) }\r\n                        </select>\r\n                        <input onChange={ ev =>setDataF1( prev=>({...prev, input:ev.target.value}) )}  value={ dataF1.input } type='text'/>\r\n                    </form>\r\n                </Col>\r\n\r\n                {/* ---Reverse Button--- */}\r\n                <Col onClick={ reverseData } xs='auto' sm='auto' className='converter_arrow'>&#x2194;</Col>\r\n\r\n                {/* ---Form №2--- */}\r\n                <Col xs={true} sm={5} >\r\n                    <form className='converter_2' >\r\n                        <label>{ dataF2.label }</label><br/>\r\n                        <select onChange={ ev=>resetFormState(ev, setDataF2) }  value={dataF2.select} className=\"converter_form_select\">\r\n                            {elOptionList(options)}\r\n                        </select>\r\n                        <input type='text' value={dataF2.input} disabled/>\r\n                    </form>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Converter\r\n","import React  from 'react';\nimport { HashRouter, Route  } from 'react-router-dom';\n\nimport CurrencyList  from './views/CurrencyList';\nimport NavBar        from './components/navBar';\nimport Converter     from './views/converter'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './sass/index.scss';\n\n\nfunction App() {\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <NavBar/>\n        <Route exact path = {[\"/home\", \"/\"]}   component = { CurrencyList } />\n        <Route exact path = \"/converter\"   component = { Converter } />\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","\r\n\r\n\r\nconst initState = { valute: {} }\r\n\r\n\r\nfunction rootReducer( state = initState, action ){\r\n    switch (action.type){\r\n        case 'SET_VALUTE':{\r\n            return { ...state, 'valute': action.valute   }\r\n        }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport default rootReducer;","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/stable';\n\nimport React    from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nimport { Provider }  from 'react-redux'\nimport thunk         from 'redux-thunk';\nimport { createStore, applyMiddleware, compose } from 'redux'\n\n// ---[ Reducers ]---\nimport rootReducer  from './store/reducers/rootReducer';\n\nconst store = createStore( rootReducer,  compose( applyMiddleware(thunk) ) );\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider >, document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}